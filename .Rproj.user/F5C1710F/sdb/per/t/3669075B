{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Final Project\"\nauthor: \"Beata Cichocka\"\ndate: \"November 28, 2017\"\noutput:\n  html_document: default\n  pdf_document: default\nalways_allow_html: yes\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = FALSE)\n\nlibrary(quanteda)\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(DBI)\nlibrary(RMySQL) \nlibrary(httr)\nlibrary(jsonlite)\nlibrary(haven)\nlibrary(RColorBrewer)\nlibrary(readxl)\nlibrary(rworldmap)\nlibrary(maps)\nlibrary(plotly)\nlibrary(dplyr)\n\n## Tidying Chinese Aid Data: 2000-2014\n\nchina.aid <- read_excel(\"~/HertieDataScience/Final_Project/ChinaAid.xlsx\")\n\n## Tidying GDP Growth Data: GDP per Capita in USD: 2000-2014\n\nglobal.gdp <- read.csv(file = \"~/HertieDataScience/Final_Project/GDPdata.csv\", header = TRUE, sep = \",\") %>%  filter(Year %in% c(2000:2014)) %>% select(-Item) %>%  arrange(Country.or.Area, Year) %>% rename(GDP_USD = Value) %>%  mutate(Growth_Rate= log10(GDP_USD)) %>% rename(year= Year, recipient_condensed = Country.or.Area)\n\n\n#joining gdp and aid\n\njoined <- full_join(china.aid, global.gdp)\n\n\n## Tidying Trade Data: China's exports and imports by country, 2000-2014\n\ntrade1 <- read.csv(file=\"~/HertieDataScience/Final_Project/comtrade2000_2004.csv\")\ntrade2 <- read.csv(file=\"~/HertieDataScience/Final_Project/comtrade2005_2009.csv\")\ntrade3 <- read.csv(file=\"~/HertieDataScience/Final_Project/comtrade2010_2014.csv\")\ntmp <- full_join(trade1, trade2)\n\nchina.trade <- full_join(tmp, trade3) %>%  select(Year, Partner, Trade.Flow, Trade.Value..US..) %>%  arrange(Partner, Year) %>%  spread(Trade.Flow, Trade.Value..US..) \n\n```\n\n\n\n## Wordcloud of Descriptions of Chinese Aid\n```{r, echo=FALSE}\ncommonwords <- c(\"china\", \"Chinese\", \"china's\", \"project\",\n                 \"signed\",\"agreement\",\n                 \"million\", \"billion\", \"one\", \"two\", \"worth\",\"used\",\n                 \"also\", \"years\", \"year\", \"month\", \n                 stopwords(\"english\"), month.name)\n\nmyDfm <- quanteda::dfm(corpus(china.aid, text_field = \"description\"),\n                       remove = commonwords,\n                       remove_punct = TRUE,  \n                       remove_numbers =TRUE\n                       ) \n\nwordcloud <- quanteda::textplot_wordcloud(myDfm,\n                             min.freq = 500,\n                             random.order = FALSE, \n                             rot.per = .25, \n                             colors = RColorBrewer::brewer.pal(8,\"Dark2\")) \nwordcloud\n```\n\n\n## Map of Recipient Countries: Amount of Projects\n```{r, arning=FALSE, echo=FALSE}\n\ncountries.data <- as.data.frame(table(china.aid$recipient_condensed))\n\nmatched <- joinCountryData2Map(countries.data, joinCode=\"NAME\", nameJoinColumn=\"Var1\", verbose=FALSE)\n\nmapCountryData(matched, nameColumnToPlot=\"Freq\", mapTitle=\"Number of Projects\",catMethod = \"pretty\", colourPalette = \"heat\")\n\n```\n\n## Map of Africa\n```{r, warning=FALSE, echo=FALSE}\ncountries.data <- as.data.frame(table(china.aid$recipient_condensed))\n\nmatched <- joinCountryData2Map(countries.data, joinCode=\"NAME\", nameJoinColumn=\"Var1\", verbose=FALSE)\n\nmapCountryData(matched, nameColumnToPlot=\"Freq\", mapRegion = \"Africa\", mapTitle=\"Number of Projects\", catMethod = \"pretty\", colourPalette = \"heat\")\n\n```\n\n\n###Aid by Sectors Over Time\n```{r}\n\nselected_sectors<- as.data.frame(table(china.aid$crs_sector_name)) %>% filter(Freq >100) %>% distinct(Var1) %>% as.vector()\n\nsectors_by_years <- as.data.frame(table((china.aid$crs_sector_name), china.aid$year)) %>% filter(Freq>10)\n\n# order legend by frequency, start with only top 3 selected. \n\n# BY MONEY not by number or projects. \n\n# add the dimension of region not just whole world. \n\nsectors_by_years %>% plot_ly(x = ~Var2, y = ~Freq, color = ~Var1)\n\n\n\n```\n\n# Type of Aid Flow over Time (loan, grant, etc. )\n```{r}\n\ntmp <-as.data.frame(table(china.aid$flow, china.aid$year))\n\n\naidtype <-plot_ly(tmp) %>% add_trace(data = tmp, type = \"bar\", x= tmp$Var2, y= tmp$Freq, color = tmp$Var1) %>%  layout(barmode = \"stack\") \n\naidtype\n\n```\n\n\n```{r}\n\n###Further Ideas\n\n # Make map based on not number or projects but on total money going in\n\n# Merge with Data from GDP growth of different countries and do regression analysis?\n\n```\n\n\n\n```{r}\n# calculated the subtotal sum of all money ( in USD) 2000-2014 by country. \n\nsubtotal.countries <- china.aid %>%  select(recipient_condensed, year, usd_current) %>%  arrange(recipient_condensed) %>% group_by(recipient_condensed, year) %>% mutate(sum.usd= sum(usd_current, na.rm= T)) %>% select(-usd_current) %>% unique() %>%arrange(recipient_condensed, year) %>%  group_by(recipient_condensed) %>% mutate( \"Total Sum for Country\"= sum(sum.usd))\n\n# the subtotal USD per sector per year\n\nsubtotal.sectors <- china.aid %>%  select(crs_sector_name, year, usd_current) %>%  arrange(crs_sector_name) %>% group_by(crs_sector_name, year) %>% mutate(sum.usd= sum(usd_current, na.rm= T)) %>% select(-usd_current) %>% unique() %>%arrange(crs_sector_name, year) %>% group_by(crs_sector_name) %>% mutate( total.per.sector= sum(sum.usd)) \n\ntop.sectors <- subtotal.sectors %>%  select(-year, -sum.usd) %>%  unique() %>%  arrange(desc(total.per.sector)) %>% filter(total.per.sector > 10000000000) %>%   filter(!(crs_sector_name %in% c(\"Unallocated / Unspecified\", \"Other Multisector\"))) %>%  left_join(subtotal.sectors) %>%  select(-total.per.sector)  \n\n                                                                                    bot.sectors <- subtotal.sectors %>%  select(-year, -sum.usd) %>%  unique() %>%  arrange(desc(total.per.sector)) %>% filter(total.per.sector < 10000000000 | crs_sector_name %in% c(\"Unallocated / Unspecified\", \"Other Multisector\")) %>% left_join(subtotal.sectors) %>% group_by(year) %>% summarize( sum.usd = sum(sum.usd)) %>% mutate(crs_sector_name = \"Other Projects\")\n                                                                                    \n  full.sectors <- full_join(top.sectors, bot.sectors)                                                                                 \n l <- list(\n  font = list(\n    family = \"sans-serif\",\n    size = 12,\n    color = \"#000\"),\n  bgcolor = \"#E2E2E2\",\n  bordercolor = \"#FFFFFF\",\n  borderwidth = 2)\n \n x <- list( title= \"Years\", nticks=20,\n  font = list(\n    family = \"sans-serif\",\n    size = 12,\n    color = \"#000\"),\n  bgcolor = \"#E2E2E2\",\n  bordercolor = \"#FFFFFF\",\n  borderwidth = 2) \n \n  y <- list( title= \"Amount of Aid (in billions of USD)\",\n  font = list(\n    family = \"sans-serif\",\n    size = 12,\n    color = \"#000\"),\n  bgcolor = \"#E2E2E2\",\n  bordercolor = \"#FFFFFF\",\n  borderwidth = 2) \n \n                                                                                                                 \ntmp <- plot_ly(full.sectors) %>%  add_trace(data = full.sectors, type = \"bar\", x= full.sectors$year, y= full.sectors$sum.usd, color = full.sectors$crs_sector_name) %>%  layout(barmode = \"stack\", legend = l, title= \"Aid by Sectors\", xaxis= x, yaxis= y) \n\ntmp\n``` \n\n```{r}\n\n# BAR graph to respresent change of countries over time- top 10 countries + rest. xolor= country\n\n\n# Correlation : (size of bubble corrensponding to the amount of aid / capita , position on y axis to trade/capita)\n\n# scatter plot : GDP/ capita to aid/capita \n\n\n\n# calculated the subtotal sum of all money ( in USD) 2000-2014 by country. \n\nsubtotal.countries <- china.aid %>%  select(recipient_condensed, year, usd_current) %>%  arrange(recipient_condensed) %>% group_by(recipient_condensed, year) %>% mutate(sum.usd= sum(usd_current, na.rm= T)) %>% select(-usd_current) %>% unique() %>%arrange(recipient_condensed, year) %>%  group_by(recipient_condensed) %>% mutate( total.per.country= sum(sum.usd))\n\n\ntop.countries <- subtotal.countries %>%  select(-year, -sum.usd) %>%  unique()%>%  arrange(desc(total.per.country)) %>% filter(total.per.sector > 10000000000) %>%   filter(!(crs_sector_name %in% c(\"Unallocated / Unspecified\", \"Other Multisector\"))) %>%  left_join(subtotal.sectors) %>%  select(-total.per.sector)  \n\n                                                                                    bot.sectors <- subtotal.sectors %>%  select(-year, -sum.usd) %>%  unique() %>%  arrange(desc(total.per.sector)) %>% filter(total.per.sector < 10000000000 | crs_sector_name %in% c(\"Unallocated / Unspecified\", \"Other Multisector\")) %>% left_join(subtotal.sectors) %>% group_by(year) %>% summarize( sum.usd = sum(sum.usd)) %>% mutate(crs_sector_name = \"Other Projects\")\n                                                                                    \n  full.sectors <- full_join(top.sectors, bot.sectors)                                                                                 \n l <- list(\n  font = list(\n    family = \"sans-serif\",\n    size = 12,\n    color = \"#000\"),\n  bgcolor = \"#E2E2E2\",\n  bordercolor = \"#FFFFFF\",\n  borderwidth = 2)\n \n x <- list( title= \"Years\", nticks=20,\n  font = list(\n    family = \"sans-serif\",\n    size = 12,\n    color = \"#000\"),\n  bgcolor = \"#E2E2E2\",\n  bordercolor = \"#FFFFFF\",\n  borderwidth = 2) \n \n  y <- list( title= \"Amount of Aid (in billions of USD)\",\n  font = list(\n    family = \"sans-serif\",\n    size = 12,\n    color = \"#000\"),\n  bgcolor = \"#E2E2E2\",\n  bordercolor = \"#FFFFFF\",\n  borderwidth = 2) \n \n                                                                                                                 \ntmp <- plot_ly(full.sectors) %>%  add_trace(data = full.sectors, type = \"bar\", x= full.sectors$year, y= full.sectors$sum.usd, color = full.sectors$crs_sector_name) %>%  layout(barmode = \"stack\", legend = l, title= \"Aid by Sectors\", xaxis= x, yaxis= y) \n\ntmp\n",
    "created" : 1511893799457.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1427281340",
    "id" : "3669075B",
    "lastKnownWriteTime" : 1513351725,
    "last_content_update" : -2147483648,
    "path" : "C:/Users/Grazyna/Desktop/Final_Project_Markdown.Rmd",
    "project_path" : null,
    "properties" : {
        "last_setup_crc32" : "2067D0BA1ba13ef4",
        "tempName" : "Untitled2"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}